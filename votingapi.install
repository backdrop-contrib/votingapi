<?php

/**
 * @file
 * Installation file for VotingAPI module.
 */

function votingapi_schema() {
  $schema['votingapi_vote'] = array(
    'fields' => array(
      'vote_id' => array('type' => 'serial', 'unsigned' => TRUE, 'not null' => TRUE),
      'entity_type' => array('type' => 'varchar', 'length' => 64, 'not null' => TRUE, 'default' => 'node'),
      'entity_id' => array('type' => 'int', 'unsigned' => TRUE, 'not null' => TRUE, 'default' => 0),
      'value' => array('type' => 'float', 'not null' => TRUE, 'default' => 0),
      'value_type' => array('type' => 'varchar', 'length' => 64, 'not null' => TRUE, 'default' => 'percent'),
      'tag' => array('type' => 'varchar', 'length' => 64, 'not null' => TRUE, 'default' => 'vote'),
      'uid' => array('type' => 'int', 'unsigned' => TRUE, 'not null' => TRUE, 'default' => 0),
      'timestamp' => array('type' => 'int', 'unsigned' => TRUE, 'not null' => TRUE, 'default' => 0),
      'vote_source' => array('type' => 'varchar', 'length' => 255),
    ),
    'primary key' => array('vote_id'),
    'indexes' => array(
      'content_uid' => array('entity_type', 'entity_id', 'uid'),
      'content_uid_2' => array('entity_type', 'uid'),
      'content_source' => array('entity_type', 'entity_id', 'vote_source'),
      'content_value_tag' => array('entity_type', 'entity_id', 'value_type', 'tag'),
    ),
  );
  $schema['votingapi_cache'] = array(
    'fields' => array(
      'vote_cache_id' => array('type' => 'serial', 'unsigned' => TRUE, 'not null' => TRUE),
      'entity_type' => array('type' => 'varchar', 'length' => 64, 'not null' => TRUE, 'default' => 'node'),
      'entity_id' => array('type' => 'int', 'unsigned' => TRUE, 'not null' => TRUE, 'default' => 0),
      'value' => array('type' => 'float', 'not null' => TRUE, 'default' => 0),
      'value_type' => array('type' => 'varchar', 'length' => 64, 'not null' => TRUE, 'default' => 'percent'),
      'tag' => array('type' => 'varchar', 'length' => 64, 'not null' => TRUE, 'default' => 'vote'),
      'function' => array('type' => 'varchar', 'length' => 64, 'not null' => TRUE, 'default' => ''),
      'timestamp' => array('type' => 'int', 'unsigned' => TRUE, 'not null' => TRUE, 'default' => 0),
    ),
    'primary key' => array('vote_cache_id'),
    'indexes' => array(
      'content' => array('entity_type', 'entity_id'),
      'content_function' => array('entity_type', 'entity_id', 'function'),
      'content_tag_func' => array('entity_type', 'entity_id', 'tag', 'function'),
      'content_vtype_tag' => array('entity_type', 'entity_id', 'value_type', 'tag'),
      'content_vtype_tag_func' => array('entity_type', 'entity_id', 'value_type', 'tag', 'function'),
    ),
  );
  return $schema;
}

/**
 * Implements hook_update_last_removed().
 */
function votingapi_update_last_removed() {
  return 7203;
}

/**
 * Move Voting API settings from variables to config.
 */
function votingapi_update_1201() {
  // Migrate variables to config.
  $config = config('votingapi.settings');
  $config->set('votingapi_last_cron', update_variable_get('votingapi_last_cron', 0));
  $config->set('votingapi_anonymous_window', update_variable_get('votingapi_anonymous_window', 86400));
  $config->set('votingapi_user_window', update_variable_get('votingapi_user_window', -1));
  $config->set('votingapi_calculation_schedule', update_variable_get('votingapi_calculation_schedule', 'immediate'));
  $config->set('votingapi_storage_module', update_variable_get('votingapi_storage_module', 'votingapi'));
  $config->set('votingapi_cron_orphaned_max', update_variable_get('votingapi_cron_orphaned_max', 50));
  $config->save();

  // Delete variables.
  update_variable_del('votingapi_last_cron');
  update_variable_del('votingapi_anonymous_window');
  update_variable_del('votingapi_user_window');
  update_variable_del('votingapi_calculate_time_schedule');
  update_variable_del('votingapi_storage_module');
  update_variable_del('votingapi_cron_orphaned_max');
}


